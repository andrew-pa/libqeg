$pixel_shader

input
{
	vec4 pos : rs_position;
	vec3 posW : position;
	vec3 normW : normal;
	vec2 texc : texcoord;
}

output
{
	vec4 color : target0;
}

texture2D tex(0)
texture1D tx2(1)

float rand(vec2 n) { 
	return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);
}

float noise(vec2 n) {
	vec2 d = vec2(0.0, 1.0);
	vec2 b = floor(n);
	vec2 f = smoothstep(vec2(0.0,0.0), vec2(1.0,1.0), fract(n));
	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);
}

float fbm(vec2 n) {
	vec2 nx = n;
	float total = 0.0;
	float amplitude = 1.0;
	for (int i = 0; i < 10; i++) {
		total += noise(nx) * amplitude;
		nx += nx;
		amplitude *= 0.5;
	}
	return total;
}

void main()
{
	vec3 base_color = vec3(0.3, fbm(input.texc*3)*.6, .7);
	output.color = vec4(base_color,1) * 
			clamp(max(dot(input.normW, vec3(0,1,0)), 0) +
			 max(dot(input.normW, vec3(.5,.5,0)), 0) +
			 max(dot(input.normW, vec3(-.3,.7,0)), 0) +
			 max(dot(input.normW, vec3(0,-1,0)), 0)*.4, 0, 1) + (.4f*sample_texture(tex, input.texc)); 
}
